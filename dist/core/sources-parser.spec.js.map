{"version":3,"sources":["../../lib/core/sources-parser.spec.js"],"names":["describe","it","sources","request","method","path","response","statusCode","body","JSON","stringify","key","parser","SourcesParser","assert","equal","Object","keys","map","length"],"mappings":";;AAAA;;AACA;;;;AAEAA,QAAQ,CAAC,eAAD,EAAkB,MAAM;AAC9BC,EAAAA,EAAE,CAAC,qBAAD,EAAwB,MAAM;AAC9B;AACA,UAAMC,OAAO,GAAG,CACd,CACE;AACEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,KADD;AAEPC,QAAAA,IAAI,EAAE;AAFC,OADX;AAKEC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,UAAU,EAAE,GADJ;AAERC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,GAAG,EAAE;AADc,SAAf;AAFE;AALZ,KADF,CADc,CAAhB,CAF8B,CAmB9B;;AACA,UAAMC,MAAM,GAAG,IAAIC,4BAAJ,CAAkBX,OAAlB,CAAf,CApB8B,CAsB9B;;AACAY,oBAAOC,KAAP,CAAaC,MAAM,CAACC,IAAP,CAAYL,MAAM,CAACM,GAAnB,EAAwBC,MAArC,EAA6C,CAA7C;;AACAL,oBAAOC,KAAP,CAAaC,MAAM,CAACC,IAAP,CAAYL,MAAM,CAACM,GAAnB,EAAwB,CAAxB,CAAb,EAAyC,WAAzC;AACD,GAzBC,CAAF;AA0BD,CA3BO,CAAR","sourcesContent":["import { SourcesParser } from './sources-parser';\r\nimport assert from 'assert';\r\n\r\ndescribe('source-parser', () => {\r\n  it('should parse source', () => {\r\n    // given\r\n    const sources = [\r\n      [\r\n        {\r\n          request: {\r\n            method: 'GET',\r\n            path: '/api/test',\r\n          },\r\n          response: {\r\n            statusCode: 200,\r\n            body: JSON.stringify({\r\n              key: 'value',\r\n            }),\r\n          },\r\n        },\r\n      ],\r\n    ];\r\n\r\n    // when\r\n    const parser = new SourcesParser(sources);\r\n\r\n    // then\r\n    assert.equal(Object.keys(parser.map).length, 1);\r\n    assert.equal(Object.keys(parser.map)[0], '/api/test');\r\n  });\r\n});\r\n"],"file":"sources-parser.spec.js"}