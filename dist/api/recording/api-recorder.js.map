{"version":3,"sources":["../../../lib/api/recording/api-recorder.js"],"names":["recordingStore","isRecordingActive","isNotRecordingApiPath","apiUrl","path","indexOf","startNewRecording","uuid","stopRecording","recording","Object","keys","length","apiRecorder","req","res","next","originalSend","send","body","call","forEach","recordUuid","push","url","baseUrl","method","params","query","responseBody","JSON","parse"],"mappings":";;;;;;;AAAA;;AAEA,MAAMA,cAAc,GAAG,EAAvB;AACA,IAAIC,iBAAiB,GAAG,KAAxB;;AAEA,MAAMC,qBAAqB,GAAG,CAACC,MAAD,EAASC,IAAT,KAAkB;AAC9C,SAAOA,IAAI,CAACC,OAAL,CAAc,GAAEF,MAAO,aAAvB,MAAyC,CAAC,CAAjD;AACD,CAFD;;AAIO,MAAMG,iBAAiB,GAAG,MAAM;AACrC,QAAMC,IAAI,GAAG,eAAb;AACAP,EAAAA,cAAc,CAACO,IAAD,CAAd,GAAuB,EAAvB;AACAN,EAAAA,iBAAiB,GAAG,IAApB;AACA,SAAOM,IAAP;AACD,CALM;;;;AAOA,MAAMC,aAAa,GAAID,IAAD,IAAU;AACrC,QAAME,SAAS,GAAGT,cAAc,CAACO,IAAD,CAAhC;AACA,SAAOP,cAAc,CAACO,IAAD,CAArB;AACAN,EAAAA,iBAAiB,GAAGS,MAAM,CAACC,IAAP,CAAYX,cAAZ,EAA4BY,MAA5B,GAAqC,CAAzD;AACA,SAAOH,SAAP;AACD,CALM;;;;AAOA,MAAMI,WAAW,GAAIV,MAAD,IAAY;AACrC,SAAO,CAACW,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACzB,QAAIf,iBAAiB,IAAIC,qBAAqB,CAACC,MAAD,EAASW,GAAG,CAACV,IAAb,CAA9C,EAAkE;AAChE,YAAMa,YAAY,GAAGF,GAAG,CAACG,IAAzB;;AACAH,MAAAA,GAAG,CAACG,IAAJ,GAAW,UAAUC,IAAV,EAAgB;AACzBF,QAAAA,YAAY,CAACG,IAAb,CAAkB,IAAlB,EAAwBD,IAAxB;AAEAT,QAAAA,MAAM,CAACC,IAAP,CAAYX,cAAZ,EAA4BqB,OAA5B,CAAqCC,UAAD,IAAgB;AAClDtB,UAAAA,cAAc,CAACsB,UAAD,CAAd,CAA2BC,IAA3B,CAAgC;AAC9BC,YAAAA,GAAG,EAAEV,GAAG,CAACW,OADqB;AAE9BrB,YAAAA,IAAI,EAAEU,GAAG,CAACV,IAFoB;AAG9BsB,YAAAA,MAAM,EAAEZ,GAAG,CAACY,MAHkB;AAI9BC,YAAAA,MAAM,EAAEb,GAAG,CAACa,MAJkB;AAK9BC,YAAAA,KAAK,EAAEd,GAAG,CAACc,KALmB;AAM9BT,YAAAA,IAAI,EAAEL,GAAG,CAACK,IANoB;AAO9BU,YAAAA,YAAY,EAAE,CAACV,IAAD,GAAQ,EAAR,GAAaW,IAAI,CAACC,KAAL,CAAWZ,IAAX;AAPG,WAAhC;AASD,SAVD;AAWD,OAdD;AAeD;;AAEDH,IAAAA,IAAI;AACL,GArBD;AAsBD,CAvBM","sourcesContent":["import { v1 as uuidv1 } from 'uuid';\r\n\r\nconst recordingStore = {};\r\nlet isRecordingActive = false;\r\n\r\nconst isNotRecordingApiPath = (apiUrl, path) => {\r\n  return path.indexOf(`${apiUrl}/recording/`) === -1;\r\n};\r\n\r\nexport const startNewRecording = () => {\r\n  const uuid = uuidv1();\r\n  recordingStore[uuid] = [];\r\n  isRecordingActive = true;\r\n  return uuid;\r\n};\r\n\r\nexport const stopRecording = (uuid) => {\r\n  const recording = recordingStore[uuid];\r\n  delete recordingStore[uuid];\r\n  isRecordingActive = Object.keys(recordingStore).length > 0;\r\n  return recording;\r\n};\r\n\r\nexport const apiRecorder = (apiUrl) => {\r\n  return (req, res, next) => {\r\n    if (isRecordingActive && isNotRecordingApiPath(apiUrl, req.path)) {\r\n      const originalSend = res.send;\r\n      res.send = function (body) {\r\n        originalSend.call(this, body);\r\n\r\n        Object.keys(recordingStore).forEach((recordUuid) => {\r\n          recordingStore[recordUuid].push({\r\n            url: req.baseUrl,\r\n            path: req.path,\r\n            method: req.method,\r\n            params: req.params,\r\n            query: req.query,\r\n            body: req.body,\r\n            responseBody: !body ? {} : JSON.parse(body),\r\n          });\r\n        });\r\n      };\r\n    }\r\n\r\n    next();\r\n  };\r\n};\r\n"],"file":"api-recorder.js"}