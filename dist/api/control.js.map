{"version":3,"sources":["../../lib/api/control.js"],"names":["router","express","Router","isLogEnabled","config","controlApi","sourcesParser","post","req","res","console","log","green","body","forEach","record","switchRecord","status","StatusCodes","ACCEPTED","end","resetMap"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,MAAM,GAAGC,iBAAQC,MAAR,CAAe,EAAf,CAAf;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAmBC,eAAzB;;AAEO,MAAMC,UAAU,GAAIC,aAAD,IAAmB;AAC3CN,EAAAA,MAAM,CAACO,IAAP,CAAY,MAAZ,EAAoB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAChC,QAAIN,YAAJ,EAAkB;AAChBO,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBC,KAAjC;AACD;;AAEDJ,IAAAA,GAAG,CAACK,IAAJ,CAASC,OAAT,CAAkBC,MAAD,IAAY;AAC3B;AACA;AACA;AACAT,MAAAA,aAAa,CAACU,YAAd,CAA2BD,MAA3B;AACD,KALD;AAOAN,IAAAA,GAAG,CAACQ,MAAJ,CAAWC,6BAAYC,QAAvB,EAAiCC,GAAjC;AACD,GAbD;AAeApB,EAAAA,MAAM,CAACO,IAAP,CAAY,QAAZ,EAAsB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClC,QAAIN,YAAJ,EAAkB;AAChBO,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYC,KAAxB;AACD;;AAEDN,IAAAA,aAAa,CAACe,QAAd;AAEAZ,IAAAA,GAAG,CAACQ,MAAJ,CAAWC,6BAAYC,QAAvB,EAAiCC,GAAjC;AACD,GARD;AAUA,SAAOpB,MAAP;AACD,CA3BM","sourcesContent":["import express from 'express';\r\nimport { StatusCodes } from 'http-status-codes';\r\nimport config from '../config';\r\n\r\nconst router = express.Router({});\r\nconst { isLogEnabled } = config;\r\n\r\nexport const controlApi = (sourcesParser) => {\r\n  router.post('/set', (req, res) => {\r\n    if (isLogEnabled) {\r\n      console.log('API set new values'.green);\r\n    }\r\n\r\n    req.body.forEach((record) => {\r\n      // console.log('new record is >');\r\n      // console.log(JSON.stringify(record, null, \"  \"));\r\n      // console.log('< new record is');\r\n      sourcesParser.switchRecord(record);\r\n    });\r\n\r\n    res.status(StatusCodes.ACCEPTED).end();\r\n  });\r\n\r\n  router.post('/reset', (req, res) => {\r\n    if (isLogEnabled) {\r\n      console.log('API Reset'.green);\r\n    }\r\n\r\n    sourcesParser.resetMap();\r\n\r\n    res.status(StatusCodes.ACCEPTED).end();\r\n  });\r\n\r\n  return router;\r\n};\r\n"],"file":"control.js"}