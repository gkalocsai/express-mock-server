{"version":3,"sources":["../lib/index.js"],"names":["port","config","server","wsServer","serverStart","sources","serverConfig","app","App","getServerPort","start","console","log","yellow","bgGreen","white","webSocketEnabled","startWebSocket","initWebSocketApi","serverStop","close","ws","Server","noServer","on","socket","message","request","head","handleUpgrade","emit"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAWC,eAAjB;AACA,IAAIC,MAAJ;AAAA,IACEC,QAAQ,GAAG,IADb;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACO,SAASC,WAAT,CAAqBC,OAArB,EAA8BC,YAAY,GAAG,EAA7C,EAAiD;AACtD,QAAMC,GAAG,GAAG,IAAIC,QAAJ,CAAQH,OAAR,EAAiBC,YAAjB,CAAZ;AACA,QAAMN,IAAI,GAAGS,aAAa,CAACH,YAAD,CAA1B;AACAJ,EAAAA,MAAM,GAAGK,GAAG,CAACG,KAAJ,CAAUV,IAAV,EAAgB,MAAM;AAC7BW,IAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmBZ,IAAK,EAAzB,CAA2Ba,MAAvC;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAa,2BAAD,CAA4BC,MAAxC;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeE,OAAf,CAAuBC,KAAnC;AACD,GAJQ,CAAT;;AAMA,MAAIT,YAAY,CAACU,gBAAjB,EAAmC;AACjCb,IAAAA,QAAQ,GAAGc,cAAc,CAACf,MAAD,CAAzB;AACAK,IAAAA,GAAG,CAACW,gBAAJ,CAAqBf,QAArB;AACD;;AAED,SAAOD,MAAP;AACD;AAED;AACA;AACA;;;AACO,SAASiB,UAAT,GAAsB;AAC3B,MAAIjB,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACkB,KAAP;AACD;;AACD,MAAIjB,QAAJ,EAAc;AACZA,IAAAA,QAAQ,CAACiB,KAAT;AACD;AACF;;AAED,SAASH,cAAT,CAAwBf,MAAxB,EAAgC;AAC9B,QAAMC,QAAQ,GAAG,IAAIkB,YAAGC,MAAP,CAAc;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAAd,CAAjB;AACApB,EAAAA,QAAQ,CAACqB,EAAT,CAAY,YAAZ,EAA2BC,MAAD,IAAY;AACpCd,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAa,IAAAA,MAAM,CAACD,EAAP,CAAU,SAAV,EAAsBE,OAAD,IAAa;AAChCf,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYc,OAAZ;AACD,KAHD;AAIAD,IAAAA,MAAM,CAACD,EAAP,CAAU,OAAV,EAAmB,MAAMb,OAAO,CAACC,GAAR,CAAY,+BAAZ,CAAzB;AACD,GAPD;AASAV,EAAAA,MAAM,CAACsB,EAAP,CAAU,SAAV,EAAqB,CAACG,OAAD,EAAUF,MAAV,EAAkBG,IAAlB,KAA2B;AAC9CzB,IAAAA,QAAQ,CAAC0B,aAAT,CAAuBF,OAAvB,EAAgCF,MAAhC,EAAwCG,IAAxC,EAA+CH,MAAD,IAAY;AACxDtB,MAAAA,QAAQ,CAAC2B,IAAT,CAAc,YAAd,EAA4BL,MAA5B,EAAoCE,OAApC;AACD,KAFD;AAGD,GAJD;AAMA,SAAOxB,QAAP;AACD;;AAED,SAASM,aAAT,CAAuBH,YAAvB,EAAqC;AACnC,SAAOA,YAAY,CAACN,IAAb,GAAoBM,YAAY,CAACN,IAAjC,GAAwCA,IAA/C;AACD","sourcesContent":["import 'colors';\r\nimport config from './config';\r\nimport { App } from './app';\r\nimport ws from 'ws';\r\n\r\nconst { port } = config;\r\nlet server,\r\n  wsServer = null;\r\n\r\n/**\r\n * Method to start server.\r\n *\r\n * @param sources\r\n * @param {Object} serverConfig\r\n * @param serverConfig.controlApiUrl    ['/api/v1']\r\n * @param serverConfig.port             [8080]\r\n * @param serverConfig.webSocketEnabled false\r\n */\r\nexport function serverStart(sources, serverConfig = {}) {\r\n  const app = new App(sources, serverConfig);\r\n  const port = getServerPort(serverConfig);\r\n  server = app.start(port, () => {\r\n    console.log(`* Server port    ${port}`.yellow);\r\n    console.log(`*************************`.yellow);\r\n    console.log('Server START'.bgGreen.white);\r\n  });\r\n\r\n  if (serverConfig.webSocketEnabled) {\r\n    wsServer = startWebSocket(server);\r\n    app.initWebSocketApi(wsServer);\r\n  }\r\n\r\n  return server;\r\n}\r\n\r\n/**\r\n * Method to stop server.\r\n */\r\nexport function serverStop() {\r\n  if (server) {\r\n    server.close();\r\n  }\r\n  if (wsServer) {\r\n    wsServer.close();\r\n  }\r\n}\r\n\r\nfunction startWebSocket(server) {\r\n  const wsServer = new ws.Server({ noServer: true });\r\n  wsServer.on('connection', (socket) => {\r\n    console.log('WebSocket client connected');\r\n    socket.on('message', (message) => {\r\n      console.log('WebSocket client message received');\r\n      console.log(message);\r\n    });\r\n    socket.on('close', () => console.log('WebSocket client disconnected'));\r\n  });\r\n\r\n  server.on('upgrade', (request, socket, head) => {\r\n    wsServer.handleUpgrade(request, socket, head, (socket) => {\r\n      wsServer.emit('connection', socket, request);\r\n    });\r\n  });\r\n\r\n  return wsServer;\r\n}\r\n\r\nfunction getServerPort(serverConfig) {\r\n  return serverConfig.port ? serverConfig.port : port;\r\n}\r\n"],"file":"index.js"}